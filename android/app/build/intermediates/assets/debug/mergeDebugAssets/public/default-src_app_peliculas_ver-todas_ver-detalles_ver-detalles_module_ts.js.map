{"version":3,"file":"default-src_app_peliculas_ver-todas_ver-detalles_ver-detalles_module_ts.js","mappings":"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","sources":["./src/app/peliculas/ver-todas/ver-detalles/ver-detalles-routing.module.ts","./src/app/peliculas/ver-todas/ver-detalles/ver-detalles.module.ts","./src/app/peliculas/ver-todas/ver-detalles/ver-detalles.page.ts","./src/app/shared/services/list.service.ts","./src/app/shared/services/seen.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { VerDetallesPage } from './ver-detalles.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: VerDetallesPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class VerDetallesPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { VerDetallesPageRoutingModule } from './ver-detalles-routing.module';\r\n\r\nimport { VerDetallesPage } from './ver-detalles.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    VerDetallesPageRoutingModule\r\n  ],\r\n  declarations: [VerDetallesPage]\r\n})\r\nexport class VerDetallesPageModule {}\r\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { IonModal, NavController, ToastController } from '@ionic/angular';\r\nimport { Subject } from 'rxjs';\r\nimport { map, takeUntil } from 'rxjs/operators';\r\nimport { MovieData } from 'src/app/shared/models/list.model';\r\nimport { ImdbService } from 'src/app/shared/services/imdb.service';\r\nimport { ListService } from 'src/app/shared/services/list.service';\r\nimport { SeenService } from 'src/app/shared/services/seen.service';\r\nimport { OverlayEventDetail } from '@ionic/core/components';\r\nimport { CalendarService } from 'src/app/shared/services/calendar.service';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-ver-detalles',\r\n  templateUrl: './ver-detalles.page.html',\r\n  styleUrls: ['./ver-detalles.page.scss'],\r\n})\r\nexport class VerDetallesPage implements OnInit, OnDestroy {\r\n\r\n  @ViewChild(IonModal) modal: IonModal;\r\n  loadedMovie: any;\r\n  loadedMovies: any;\r\n  loadedLists: any[] = [];\r\n  loadedId: string;\r\n  loaded: boolean = false;\r\n  seen: any;\r\n  seenObject: any;\r\n  option: string;\r\n  chosenOpt: string;\r\n  indexOfList: any;\r\n  movieData: MovieData;\r\n  unsub: Subject<void> = new Subject()\r\n  name: string;\r\n  message = 'This modal example uses triggers to automatically open a modal when the button is clicked.';\r\n  date: any;\r\n  todayDate: string = moment().format('YYYY-MM-DD')\r\n\r\n// Prueba de push\r\n  constructor(\r\n    private router: ActivatedRoute,\r\n    private navCtrl: NavController,\r\n    private imdbService: ImdbService,\r\n    private seenService: SeenService,\r\n    public toastController: ToastController,\r\n    private listService: ListService,\r\n    private calendarService: CalendarService \r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.router.paramMap\r\n    .pipe(takeUntil(this.unsub))\r\n    .subscribe(pM => {\r\n      if (!pM.has('peliculaId')) {\r\n        this.navCtrl.navigateBack('/peliculas/tabs/ver-todas')\r\n      }\r\n      this.loadedId = pM.get('peliculaId');\r\n\r\n      this.imdbService.findMovie(this.loadedId)\r\n      .pipe(takeUntil(this.unsub))\r\n      .subscribe(res => {\r\n        this.loadedMovie = res;\r\n        this.updateSeen();\r\n        this.loaded = true;\r\n      })\r\n    })\r\n    this.listService.displayExistingLists().pipe(map(response => {\r\n      for (let k in response) {\r\n        this.loadedLists.push(response[k])\r\n        console.log(this.loadedLists)\r\n      }\r\n    }))\r\n    .pipe(takeUntil(this.unsub))\r\n    .subscribe();\r\n  }\r\n\r\n  updateSeen() {\r\n    this.seenService.OnGetSeen(this.loadedId)\r\n    .pipe(takeUntil(this.unsub))\r\n    .subscribe({next: (bool: boolean) => {\r\n      this.seenObject = bool;\r\n      this.seen = this.seenObject.seen;\r\n    }})\r\n  }\r\n\r\n\r\n  toggleSeen() {\r\n    this.seen = !this.seen; \r\n    console.log(this.seen);\r\n    if (this.seen == false) {\r\n      this.option = 'no vista'\r\n    } \r\n    if (this.seen == true) {\r\n      this.option = 'vista'\r\n    }\r\n    this.presentToast();\r\n    this.seenService.OnSendRequest(this.loadedId, this.seen)\r\n    .pipe(takeUntil(this.unsub))\r\n    .subscribe()\r\n  }\r\n\r\n  onShow() {\r\n    this.indexOfList = this.loadedLists.findIndex(obj => {\r\n      return obj.nombreLista === this.chosenOpt\r\n    })\r\n    this.chosenOpt = this.chosenOpt.toLowerCase().replace(/\\s/g, '-')\r\n    console.log('Seleccionaste la opcion ' +  this.indexOfList)\r\n    this.movieData = {\r\n      titulo: this.loadedMovie.title,\r\n      imagen: this.loadedMovie.image\r\n    }\r\n    this.onSend();\r\n  }\r\n\r\n  setReminder() {\r\n    console.log(this.date)\r\n    console.log('Reminder set to: ' + moment(this.date).format('YYYY-MM-DD'))\r\n    this.calendarService.onAddReminder(this.loadedId, this.date).subscribe(next => {\r\n      console.log(next)\r\n      this.confirm()\r\n    })\r\n  }\r\n\r\n  onSend(){\r\n    this.listService.MovieToList(this.chosenOpt, this.loadedId, this.movieData)\r\n    .pipe(takeUntil(this.unsub))\r\n    .subscribe()\r\n  }\r\n\r\n  async presentToast() {\r\n    const toast = await this.toastController.create({\r\n      message: 'Marcado como ' + this.option,\r\n      duration: 1000,\r\n      position: 'bottom'\r\n    });\r\n    toast.present()\r\n  }\r\n\r\n  cancel() {\r\n    this.modal.dismiss(null, 'cancel');\r\n  }\r\n\r\n  confirm() {\r\n    this.modal.dismiss(this.name, 'confirm');\r\n  }\r\n\r\n  onWillDismiss(event: Event) {\r\n    const ev = event as CustomEvent<OverlayEventDetail<string>>;\r\n    if (ev.detail.role === 'confirm') {\r\n      console.log(this.date)\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsub.next();\r\n    this.unsub.unsubscribe();\r\n  }\r\n\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { map } from 'rxjs/operators';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ListService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authService: AuthService\r\n    ) { }\r\n\r\n  private userId: string = this.authService.userKey;\r\n  private baseUrl = `${environment.URL_USERS}/${this.userId}/listas/`\r\n  private plainUrl = `${environment.URL_USERS}/${this.userId}/listas.json`\r\n\r\n  OnCreateNewList(data, folderName) {\r\n    console.log('poniendo lista en ' + this.baseUrl + folderName + '.json', data)\r\n    return this.http.put(this.baseUrl + folderName + '.json', data)\r\n  }\r\n  \r\n  deleteList(listId: string){\r\n    return this.http.delete(this.baseUrl + listId + '.json')\r\n  }\r\n\r\n  removeMovie(listId: string, movieId: string){\r\n    console.log(movieId)\r\n    console.log(`${this.baseUrl}${listId}/contenido/${movieId}.json`)\r\n    return this.http.delete(`${this.baseUrl}${listId}/contenido/${movieId}.json`)\r\n  }\r\n\r\n  displayExistingLists() {\r\n    return this.http.get(this.plainUrl)\r\n  }\r\n\r\n  getAllLists() {\r\n    let array: any[] = []\r\n    let arrayX: any[] = []\r\n    this.http.get(this.plainUrl).pipe(map(response => {\r\n      for (let k in response) {\r\n        array.push(response[k])\r\n      }\r\n      for (let x in array) {\r\n        arrayX.push({\r\n          nombre: array[x].nombre,\r\n          contenido: []\r\n        })\r\n        for (let cont in array[x].contenido) {\r\n          if (cont !== '0') { //Filtro para que no tire el 0 que se genera al crear una lista nueva siempre\r\n            arrayX[x].contenido.push({\r\n              id: cont,\r\n              imagen: array[x].contenido[cont].imagen,\r\n              titulo: array[x].contenido[cont].titulo\r\n            })\r\n          }\r\n        }\r\n      }\r\n    })).subscribe()\r\n    return arrayX;\r\n  }\r\n\r\n  getList(ind, movieId) {\r\n    const gotList: string[] = [];\r\n    let exist: boolean = false;\r\n    this.http.get(this.plainUrl)\r\n    .pipe(map(res => {\r\n      for (const key in res[ind].listContent){\r\n        gotList.push(res[ind].listContent[key])\r\n        console.log(gotList)\r\n        if (res[ind].listContent[key] === movieId){\r\n          exist = true;\r\n        }\r\n      } \r\n      console.log('El id es ' + movieId);\r\n      if (exist === false) {\r\n        console.log('Primero' + [{...gotList}])\r\n        gotList.push(movieId);\r\n        console.log('Segundo' + gotList)\r\n      }\r\n      console.log('esta peli ' + exist)\r\n      let x = gotList.reduce(function(s,a){\r\n        s.push(a);\r\n        console.log('coso ' + s);\r\n        return s;\r\n      }, [])\r\n      console.log(x)\r\n      this.http.put(this.baseUrl + ind + '/listContent.json', x).subscribe({next: respuesta => {\r\n      }})\r\n    })).subscribe()\r\n  }\r\n\r\n  MovieToList(chosenOpt: string, loadedId: string, data) {\r\n    return this.http.put(this.baseUrl + '/' + chosenOpt +'/contenido/' + loadedId + '.json', data)\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SeenService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authService: AuthService\r\n    ) { }\r\n  // URL_BD_SEEN: `${URL_MOOLI}/users/-N8PnJ6s8FDh77vUleJp/seenList/`,\r\n  private userId: string = this.authService.userKey;\r\n  private baseUrl = `${environment.URL_USERS}/${this.userId}/seenList/`\r\n  \r\n  OnSendRequest(id: string, seen: boolean) {\r\n    return this.http.patch(this.baseUrl + id + '.json', {seen})\r\n  }\r\n  \r\n  OnGetSeen(id: string) {\r\n    return this.http.get(this.baseUrl + id + '.json')\r\n  }\r\n}\r\n"],"names":["Component","ViewChild","ActivatedRoute","IonModal","NavController","ToastController","Subject","map","takeUntil","ImdbService","ListService","SeenService","CalendarService","moment","VerDetallesPage","constructor","router","navCtrl","imdbService","seenService","toastController","listService","calendarService","format","ngOnInit","paramMap","pipe","unsub","subscribe","pM","has","navigateBack","loadedId","get","findMovie","res","loadedMovie","updateSeen","loaded","displayExistingLists","response","k","loadedLists","push","console","log","OnGetSeen","next","bool","seenObject","seen","toggleSeen","option","presentToast","OnSendRequest","onShow","indexOfList","findIndex","obj","nombreLista","chosenOpt","toLowerCase","replace","movieData","titulo","title","imagen","image","onSend","setReminder","date","onAddReminder","confirm","MovieToList","toast","create","message","duration","position","present","cancel","modal","dismiss","name","onWillDismiss","event","ev","detail","role","ngOnDestroy","unsubscribe","args","selector","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}